@* @model NailStudioApp.Web.ViewModel.Appointment.AddAppointmentViewModel

@{
    ViewData["Title"] = "Създаване на среща";
}

<h1>Създайте нова среща</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label for="ServiceId">Изберете услуга:</label>
        <select asp-for="ServiceId" class="form-control" asp-items="Model.AvailableServices">
            <option value="">Изберете услуга</option>
        </select>
    </div>

    <div class="form-group">
        <label for="StaffMemberId">Изберете служител:</label>
        <select asp-for="StaffMemberId" class="form-control" asp-items="Model.AvailableStaffMembers">
            <option value="">Изберете служител</option>
        </select>
    </div>

    <div class="form-group">
        <label for="AppointmentDate">Изберете дата:</label>
        <input type="date" asp-for="AppointmentDate" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
    </div>

    <div class="form-group">
        <label for="AvailableTimes">Изберете час:</label>
        <select id="AvailableTimes" class="form-control">
            <option value="">Изберете час</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Запази срещата</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Когато служител или дата се променят, да се обновят наличните часове
            $("select#StaffMemberId, input#AppointmentDate").change(function () {
                var staffMemberId = $("select#StaffMemberId").val();
                var appointmentDate = $("input#AppointmentDate").val();

                if (staffMemberId && appointmentDate) {
                    $.getJSON("/Appointment/GetAvailableTimes", { staffMemberId: staffMemberId, date: appointmentDate }, function (data) {
                        if (data.error) {
                            alert(data.error);
                            $("#AvailableTimes").html('<option value="">Няма налични часове</option>');
                        } else {
                            var options = '';
                            $.each(data.availableTimes, function (index, item) {
                                options += `<option value="${item.value}">${item.text}</option>`;
                            });
                            $("#AvailableTimes").html(options);
                        }
                    });
                }
            });
        });
    </script>
} *@
@model NailStudioApp.Web.ViewModel.Appointment.AddAppointmentViewModel

<form method="post" id="appointmentForm">
    <!-- Избор на служител -->
    <div>
        <label for="StaffMemberId">Служител</label>
        <select id="StaffMemberId" name="StaffMemberId">
            <option value="">Изберете служител</option>
            @foreach (var staff in Model.AvailableStaffMembers)
            {
                <option value="@staff.Value">@staff.Text</option>
            }
        </select>
    </div>

    <!-- Избор на дата -->
    <div>
        <label for="AppointmentDate">Дата</label>
        <input type="date" id="AppointmentDate" name="AppointmentDate" value="@Model.AppointmentDate.ToString("yyyy-MM-dd")" min="" />
    </div>

    <!-- Избор на процедура -->
    <div>
        <label for="ServiceId">Процедура</label>
        <select id="ServiceId" name="ServiceId">
            <option value="">Изберете процедура</option>
            @foreach (var service in Model.AvailableServices)
            {
                <option value="@service.Value">@service.Text</option>
            }
        </select>
    </div>

    <!-- Избор на свободен час -->
    <div>
        <label for="AppointmentTime">Час</label>
        <select id="AppointmentTime" name="AppointmentTime">
            <option value="">Изберете час</option>
        </select>
    </div>

    <!-- Кнопка за запазване -->
    <div>
        <button type="submit">Запази</button>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Задаваме минималната дата (след днешния ден)
        const today = new Date();
        today.setDate(today.getDate() + 1); // Увеличаваме деня с 1
        const dateInput = document.getElementById('AppointmentDate');
        const year = today.getFullYear();
        const month = (today.getMonth() + 1).toString().padStart(2, '0');
        const day = today.getDate().toString().padStart(2, '0');
        dateInput.min = `${year}-${month}-${day}`;

        // Слушатели за промяна на дата, служител и процедура
        document.getElementById('StaffMemberId').addEventListener('change', fetchAvailableTimes);
        document.getElementById('AppointmentDate').addEventListener('change', fetchAvailableTimes);
        document.getElementById('ServiceId').addEventListener('change', fetchAvailableTimes);

        // Функция за получаване на свободните часове
        function fetchAvailableTimes() {
            const staffMemberId = document.getElementById('StaffMemberId').value;
            const appointmentDate = document.getElementById('AppointmentDate').value;
            const serviceId = document.getElementById('ServiceId').value;

            if (staffMemberId && appointmentDate && serviceId) {
                // Направи AJAX заявка към контролера за свободни часове
                fetch(`/Appointment/GetAvailableTimes?staffMemberId=${staffMemberId}&date=${appointmentDate}`)
                    .then(response => response.json())
                    .then(data => {
                        const timeSelect = document.getElementById('AppointmentTime');
                        timeSelect.innerHTML = '<option value="">Изберете час</option>'; // Изчистваме предишните часове

                        // Ако има свободни часове, добавяме ги
                        if (data.availableTimes && data.availableTimes.length > 0) {
                            data.availableTimes.forEach(time => {
                                const option = document.createElement('option');
                                option.value = time.Value;
                                option.textContent = time.Text;
                                timeSelect.appendChild(option);
                            });
                        } else {
                            const option = document.createElement('option');
                            option.value = '';
                            option.textContent = 'Няма свободни часове';
                            timeSelect.appendChild(option);
                        }
                    })
                    .catch(error => console.error('Error fetching available times:', error));
            }
        }

        // Автоматично извикваме функцията при зареждане на страницата
        fetchAvailableTimes();
    });
</script>




