@* @model NailStudioApp.Web.ViewModel.Appointment.AddAppointmentViewModel

@{
    ViewData["Title"] = "Създаване на среща";
}

<h1>Създайте нова среща</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label for="ServiceId">Изберете услуга:</label>
        <select asp-for="ServiceId" class="form-control" asp-items="Model.AvailableServices">
            <option value="">Изберете услуга</option>
        </select>
    </div>

    <div class="form-group">
        <label for="StaffMemberId">Изберете служител:</label>
        <select asp-for="StaffMemberId" class="form-control" asp-items="Model.AvailableStaffMembers">
            <option value="">Изберете служител</option>
        </select>
    </div>

    <div class="form-group">
        <label for="AppointmentDate">Изберете дата:</label>
        <input type="date" asp-for="AppointmentDate" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
    </div>

    <div class="form-group">
        <label for="AvailableTimes">Изберете час:</label>
        <select id="AvailableTimes" class="form-control">
            <option value="">Изберете час</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Запази срещата</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Когато служител или дата се променят, да се обновят наличните часове
            $("select#StaffMemberId, input#AppointmentDate").change(function () {
                var staffMemberId = $("select#StaffMemberId").val();
                var appointmentDate = $("input#AppointmentDate").val();

                if (staffMemberId && appointmentDate) {
                    $.getJSON("/Appointment/GetAvailableTimes", { staffMemberId: staffMemberId, date: appointmentDate }, function (data) {
                        if (data.error) {
                            alert(data.error);
                            $("#AvailableTimes").html('<option value="">Няма налични часове</option>');
                        } else {
                            var options = '';
                            $.each(data.availableTimes, function (index, item) {
                                options += `<option value="${item.value}">${item.text}</option>`;
                            });
                            $("#AvailableTimes").html(options);
                        }
                    });
                }
            });
        });
    </script>
} *@


@model NailStudioApp.Web.ViewModel.Appointment.AppointmentViewModel

<h2>Create Appointment</h2>

<form asp-action="Create" method="post">
    <!-- Service Selection -->
    <div class="form-group">
        <label for="ServiceId">Select Service</label>
        <select asp-for="ServiceId" class="form-control" asp-items="Model.Services" onchange="this.form.submit()">
        </select>
    </div>

    <!-- Staff Member Selection -->
    <div class="form-group">
        <label for="StaffMemberId">Select Staff Member</label>
        <select asp-for="StaffMemberId" class="form-control" asp-items="Model.StaffMembers" onchange="this.form.submit()">
        </select>
    </div>

    <!-- Date Selection -->
    <div class="form-group">
        <label for="SelectedDate">Select Date</label>
        <input asp-for="SelectedDate" class="form-control" type="date" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
    </div>

    <!-- Next Button -->
    <div class="form-group" id="nextButtonSection" style="display:none;">
        <button type="button" class="btn btn-primary" id="nextButton">Next</button>
    </div>

    <!-- Available Times Section -->
    <div id="availableTimesSection" class="form-group" style="display:none;">
        <label for="AvailableTimes">Select Time</label>
        <select asp-for="AvailableTimes" class="form-control" asp-items="Model.AvailableTimes">
        </select>
        <button type="submit" class="btn btn-primary">Add Appointment</button>
    </div>
</form>

<script>
    // Function to show the "Next" button once the service, staff member, and date are selected
    function checkFormCompletion() {
        const serviceId = document.querySelector('select[name="ServiceId"]').value;
        const staffMemberId = document.querySelector('select[name="StaffMemberId"]').value;
        const selectedDate = document.querySelector('input[name="SelectedDate"]').value;

        // Show the "Next" button only if all fields are selected
        if (serviceId && staffMemberId && selectedDate) {
            document.getElementById('nextButtonSection').style.display = 'block';
        } else {
            document.getElementById('nextButtonSection').style.display = 'none';
        }
    }

    // Event listeners for the form fields to call checkFormCompletion whenever any field changes
    document.querySelector('select[name="ServiceId"]').addEventListener('change', checkFormCompletion);
    document.querySelector('select[name="StaffMemberId"]').addEventListener('change', checkFormCompletion);
    document.querySelector('input[name="SelectedDate"]').addEventListener('change', checkFormCompletion);

    // Event listener for the "Next" button to fetch available times
    document.getElementById('nextButton')?.addEventListener('click', fetchAvailableTimes);

    // Function to fetch available times for the selected service, staff member, and date
    async function fetchAvailableTimes() {
        const serviceId = document.querySelector('select[name="ServiceId"]').value;
        const staffMemberId = document.querySelector('select[name="StaffMemberId"]').value;
        const selectedDate = document.querySelector('input[name="SelectedDate"]').value;

        if (serviceId && staffMemberId && selectedDate) {
            const response = await fetch(`/Appointment/GetAvailableTimes?serviceId=${serviceId}&staffMemberId=${staffMemberId}&selectedDate=${selectedDate}`);
            const availableTimes = await response.json();

            // Populate the Available Times dropdown with the fetched data
            const availableTimesSelect = document.querySelector('select[name="AvailableTimes"]');
            availableTimesSelect.innerHTML = ''; // Clear existing options
            availableTimes.forEach(time => {
                const option = document.createElement('option');
                option.value = time.value;
                option.textContent = time.text;
                availableTimesSelect.appendChild(option);
            });

            // Display the available times section
            document.getElementById('availableTimesSection').style.display = 'block';
        }
    }
    function updateSelectedTime() {
        const selectedTime = document.getElementById('SelectedTime').value;
        document.getElementById('SelectedTime').value = selectedTime;
    }

    // Call checkFormCompletion on page load to ensure the "Next" button is visible if fields are pre-filled
    window.addEventListener('load', checkFormCompletion);
</script>



