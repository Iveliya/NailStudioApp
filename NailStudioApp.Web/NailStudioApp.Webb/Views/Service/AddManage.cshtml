@model NailStudioApp.Web.ViewModel.Service.AddServiceFormModel

@{
    ViewData["Title"] = "Add Service";
}

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="card-header bg-gradient bg-info text-white rounded-top">
            <h3 class="text-center mb-0">Add a New Service</h3>
        </div>

        <div class="card-body p-5">
            <form asp-action="AddManage" method="post" class="needs-validation" novalidate>

                <div class="mb-4">
                    <label for="Name" class="form-label fw-bold text-secondary">Service Name</label>
                    <input type="text" class="form-control form-control-lg rounded-3" id="Name" name="Name" placeholder="Enter service name" required>
                    <div class="invalid-feedback">
                        Please provide a service name.
                    </div>
                </div>

                <div class="mb-4">
                    <label for="Price" class="form-label fw-bold text-secondary">Price (in $)</label>
                    <input type="number" step="0.01" class="form-control form-control-lg rounded-3" id="Price" name="Price" placeholder="Enter price" required>
                    <div class="invalid-feedback">
                        Please provide a valid price.
                    </div>
                </div>

                <div class="mb-4">
                    <label for="DurationInMinutes" class="form-label fw-bold text-secondary">Duration (minutes)</label>
                    <input type="number" class="form-control form-control-lg rounded-3" id="DurationInMinutes" name="DurationInMinutes" placeholder="Enter duration" required>
                    <div class="invalid-feedback">
                        Please provide a valid duration.
                    </div>
                </div>

                <div class="mb-4">
                    <label for="ImageUrl" class="form-label fw-bold text-secondary">Image URL</label>
                    <input type="url" class="form-control form-control-lg rounded-3" id="ImageUrl" name="ImageUrl" placeholder="Enter image URL" required>
                    <div class="invalid-feedback">
                        Please provide a valid image URL.
                    </div>
                </div>

                <div class="mb-4" id="imagePreviewContainer" style="display:none;">
                    <label for="ImagePreview" class="form-label fw-bold text-secondary">Image Preview</label>
                    <img id="imagePreview" class="img-fluid rounded-3" style="max-height: 300px; width: 100%; object-fit: contain;" alt="Service Image Preview" />
                </div>

                <div class="mb-4">
                    <label for="Description" class="form-label fw-bold text-secondary">Description</label>
                    <textarea class="form-control form-control-lg rounded-3" id="Description" name="Description" rows="4" placeholder="Enter a detailed description of the service" required></textarea>
                    <div class="invalid-feedback">
                        Please provide a description.
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a href="/Service/Manage" class="btn btn-outline-secondary btn-lg shadow">
                        <i class="bi bi-arrow-left-circle me-1"></i> Back to All Services
                    </a>
                    <button type="submit" class="btn btn-primary btn-lg shadow">
                        <i class="bi bi-check-circle me-2"></i> Add Service
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.getElementById('ImageUrl').addEventListener('input', function () {
        var imageUrl = this.value;
        var imagePreview = document.getElementById('imagePreview');
        var imagePreviewContainer = document.getElementById('imagePreviewContainer');

        if (imageUrl) {
            imagePreviewContainer.style.display = 'block';
            imagePreview.src = imageUrl;
        } else {
            imagePreviewContainer.style.display = 'none';
        }
    });

    (function () {
        'use strict';
        var forms = document.querySelectorAll('.needs-validation');
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>

